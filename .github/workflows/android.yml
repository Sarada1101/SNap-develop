name: Android CI

on:
  pull_request:
    branches: [main]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # ./gradlewを使えるようにする
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      # Gradleの依存関係をキャッシュ/リストアしてビルド時間を短くする
      - name: Gradle Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

  assembleDebug:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: gradlew assembleDebug
        run: |
          ./gradlew assembleDebug

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: gradlew lint
        run: |
          ./gradlew lint

  spotbugsDebug:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: gradlew spotbugsDebug
        run: |
          ./gradlew spotbugsDebug

  checkstyle:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: gradlew checkstyle
        run: |
          ./gradlew checkstyle

  danger:
    needs: [assembleDebug, lint, spotbugsDebug, checkstyle]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: set up Ruby 2.6
        uses: actions/setup-ruby@v1
        with:
          ruby-version: "2.6"
      - name: Cache Gems
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('Gemfile') }} # change your gemfile path
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: run danger
        uses: MeilCli/danger-action@v5
        with:
          plugins_file: "Gemfile"
          install_path: "vendor/bundle"
          danger_file: "Dangerfile"
          danger_id: "danger-pr"
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notification:
    needs: danger
    runs-on: ubuntu-latest
    steps:
      # 失敗したときのSlackへの通知
      - name: Slack Notification Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2.0.1
        env:
          SLACK_CHANNEL: notify-android
          SLACK_ICON: https://github.com/actions.png?size=48
          SLACK_COLOR: "#ff0000"
          SLACK_TITLE: ":fire: Build Failure :fire:"
          SLACK_MESSAGE: |
            Build failure!
            See more detail to check github.
          SLACK_USERNAME: Github Actions
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      # 成功した時のSlackへの通知
      - name: Slack Notification Success
        if: success()
        uses: rtCamp/action-slack-notify@v2.0.1
        env:
          SLACK_CHANNEL: notify-android
          SLACK_ICON: https://github.com/actions.png?size=48
          SLACK_TITLE: ":rocket: Build Success :rocket:"
          SLACK_MESSAGE: |
            Build success! yattane!
          SLACK_USERNAME: Github Actions
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
